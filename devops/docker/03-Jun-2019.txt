Create Ubuntu Machine on AWS
All Traffic - anywhere

Connect using git bash

Go to Root Account
$ sudo  su -
# curl -fsSL https://get.docker.com -o get-docker.sh ( this will download shell script in the machine)

# sh get-docker.sh  ( This will execute the shell script, which will install docker )


How to check the docker is installed or not

# docker --version


We should be comformatable with four terms
1) Dcoker Images   
Combinations of binaries / libraries which are necessary for one software application.

2) Docker Containers  
When image is intalled and in comes into running condition, it is called container.
Any no of containers can be created using one image.



3) Docker Host
Machine on which docker is installed, is called as Docker host.
4) Docker Client
Commands like docker run, docker images,  docker build  are entered in software application called docker client.






On linux machine, git bash will work like docker client.
On windows machine , powershell will work like docker clinet.


Docker Commands
--------------------

1 To download a docker image 
   docker pull image_name 

2 To see the list of docker images 
  docker image ls 
  (or) 
  docker images 

3 To delete a docker image from docker host 
  docker rmi image_name/image_id 

4) To upload a docker image into docker hub 
   docker push image_name 

5) To tag an image 
docker tag   image_name   ipaddress_of_local_registry:5000/image_name 

6) To build an image from a customised container 
  docker   commit  container_name/container_id     new_image_name 

7) To create an image from docker file 
   docker build -t    new_image_name 

8) To search for a docker image 
   docker search image_name 

9)  To delete all images networks that are not attached to containers 
   docker system prune -a 



++++++++++++++++++++++++++++++++++++++++++++++


Working on containers
-----------------------------

10) To see the list of all running continers 
   docker  container  ls 

11) To see the list of running and stopped containers 
    docker   ps -a 

12) To start a stopped container 
    docker  start  container_name/container_id 

13) To stop a running container 
    docker stop   container_name/container_id 

14) To restart a running container 
   docker restart container_name/container_id 
         To restart after 10 seconds 
   docker restart  -t  10  container_name/container_id 

15) To delete a stopped container 
    docker  rm  container_name/container_id

16) To delete a running container 
    docker  rm  -f  container_name/container id 

17) To stop all running containers 
    docker stop $(docker ps -aq) 

18) To restart all containers 
    docker restart $(docker ps -aq) 

19) To remove all stopped containers 
    docker rm $(docker ps -aq) 

20) To remove all contianers(running and stopped) 
    docker rm -f  $(docker ps -aq) 

21) To see the logs generated by a container 
   docker logs container_name/container_id 

22) To see the ports used by a container 
   docker port container_name/container_id 

23) To get detailed info about a container 
   docker inspect container_name/container_id 

24) To go into the shell of a running contianer which is moved into background 
   docker attach container_name/container id 

25) To execute anycommand in a container 
   docker exec -it container_name/container_id command
   Eg: To launch the bash shell in a contianer 
   docker exec -it container_name/container_id    bash 


26) To create a container from a docker image  ( imp )
     docker run image_name   


++++++++++++++++++++++++++++++++++++++++++++++++


Run command options 

-it 	for opening an interactive terminal in a container 


--name 	Used for giving a name to a container 

-d 	Used for running the container in detached mode as a background process 

-e 	Used for passing environment varaibles to the container 



-p 	Used for port mapping between port of container with the dockerhost port.

 
-P 	Used for automatic port mapping ie, it will map the internal port of the container 
                with some port on host machine. 
               This host port will be some number greater than 30000 

-rm 	Used for deleting the container on exit from the container


-v 	Used for attaching a volume to the container 

--volume-from 	 Used for sharing volume between containers 

--network 	Used to run the contianer on a specific network 
--link 		Used for linking the container for creating a multi container architecture 


--cpus 	Used to specify the number of cpus that the container can use 


--memory  	Used to specify the maximum amount of ram that the container can use 


++++++++++++++++++++++++++++++++++++++++++++++++++=






Working on docker networks 
------------------------------
27) To see the list of docker networks 
    docker network ls 
28) To create a new network 
    docker network create --driver type_of_network network_name 

29) To remove a network 
    docker network rm network_id/network_name 

30) To see detailed info about a network 
    docker network inspect network_name/network_id 

31) To attach a running container to a network 
    docker network connect network_name/network_id container_name/container_id 

32) To disconnect a container from a network 
    docker network disconnect network_name/network_id container_name/container id 

Working on docker volumes 
--------------------------------
33) To see the list of docker volumes 
    docker volume ls 

34) To create a new docker volume 
    docker volume create volume_name 

35) To see detailed info about a volume 
    docker volume inspect volume_name/volume_id 

36) To delete a volume 
    docker volume rm volume_name/volume_id 

